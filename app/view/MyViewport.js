/*
 * File: app/view/MyViewport.js
 *
 * This file was generated by Sencha Architect version 2.1.0.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Ext JS 4.1.x library, under independent license.
 * License of Sencha Architect does not include license for Ext JS 4.1.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('MyApp.view.MyViewport', {
    extend: 'Ext.container.Viewport',

    initComponent: function() {
        var me = this;

        Ext.applyIf(me, {
            items: [
                {
                    xtype: 'panel',
                    id: 'chartPanel',
                    itemId: 'chartPanel',
                    title: 'My Panel',
                    dockedItems: [
                        {
                            xtype: 'toolbar',
                            dock: 'top',
                            items: [
                                {
                                    xtype: 'button',
                                    text: 'MyButton',
                                    listeners: {
                                        click: {
                                            fn: me.onButtonClick,
                                            scope: me
                                        }
                                    }
                                }
                            ]
                        }
                    ],
                    items: [
                        {
                            xtype: 'container',
                            id: 'chartHolder',
                            itemId: 'chartHolder',
                            height: 768
                        }
                    ]
                }
            ]
        });

        me.callParent(arguments);
    },

    onButtonClick: function(button, e, options) {
        var dataStore = Ext.getStore('UtilizationStore');

        var chartModel = dataStore.getRange();

        var chartData = chartModel[0];

        var chartHolder = Ext.getCmp('chartHolder');
        var chartHolderSize = chartHolder.getSize();

        function drawVisualization() {

            var data = google.visualization.arrayToDataTable(chartData.getData().data);

            // Create and draw the visualization.
            new google.visualization.LineChart(document.getElementById('chartHolder')).
            draw(data, {curveType: "function",
            width: chartHolderSize.width , height: chartHolderSize.height ,
            vAxis: {maxValue: 10}}
            );
        }

        drawVisualization();
    }

});